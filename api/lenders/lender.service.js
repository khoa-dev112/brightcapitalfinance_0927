const pool = require("../../config/database")

module.exports = {
    create: (data, callBack) => {
        pool.query(
            `insert into lenders(
                lendercompany, 
                firstname, 
                lastname, 
                jobtitle, 
                businessphone, 
                mobilephone, 
                email, 
                streetaddress, 
                city, 
                postcode, 
                state, 
                country, 
                minloanlend, 
                maxloanlend, 
                additionalnotes, 
                entven, 
                hotels, 
                pubs, 
                resstk, 
                retvil, 
                stuacc, 
                vlnda, 
                vlwda, 
                asspur, 
                assref, 
                devfin, 
                eqtfin, 
                mezfin, 
                resour, 
                secmor, 
                subfin, 
                aas_nswmetro, 
                aas_nswregional, 
                aas_act, 
                aas_vicmetro, 
                aas_vicregional, 
                aas_qldmetro, 
                aas_qldregional, 
                aas_wametro, 
                aas_waregional, 
                aas_sametro, 
                aas_saregional, 
                aas_tasmetro, 
                aas_tasregional, 
                aas_ntmetro, 
                aas_ntregional
            )
            values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`,
            [
                data.lendercompany, 
                data.firstname, 
                data.lastname, 
                data.jobtitle, 
                data.businessphone, 
                data.mobilephone, 
                data.email, 
                data.streetaddress, 
                data.city, 
                data.postcode, 
                data.state, 
                data.country, 
                data.minloanlend, 
                data.maxloanlend, 
                data.additionalnotes, 
                data.entven, 
                data.hotels, 
                data.pubs, 
                data.resstk, 
                data.retvil, 
                data.stuacc, 
                data.vlnda, 
                data.vlwda, 
                data.asspur, 
                data.assref, 
                data.devfin, 
                data.eqtfin, 
                data.mezfin, 
                data.resour, 
                data.secmor, 
                data.subfin, 
                data.aas_nswmetro, 
                data.aas_nswregional, 
                data.aas_act, 
                data.aas_vicmetro, 
                data.aas_vicregional, 
                data.aas_qldmetro, 
                data.aas_qldregional, 
                data.aas_wametro, 
                data.aas_waregional, 
                data.aas_sametro, 
                data.aas_saregional, 
                data.aas_tasmetro, 
                data.aas_tasregional, 
                data.aas_ntmetro, 
                data.aas_ntregional
            ],
            (error, results, fields) => {
                if (error) {
                return callBack(error)
                }
                return callBack(null, results)
            }
        )
    },
    getLenders: callBack => {
        pool.query(
            `select 
                lendercompany, 
                firstname, 
                lastname, 
                jobtitle, 
                businessphone, 
                mobilephone, 
                email, 
                streetaddress, 
                city, 
                postcode, 
                state, 
                country, 
                minloanlend, 
                maxloanlend, 
                additionalnotes, 
                entven, 
                hotels, 
                pubs, 
                resstk, 
                retvil, 
                stuacc, 
                vlnda, 
                vlwda, 
                asspur, 
                assref, 
                devfin, 
                eqtfin, 
                mezfin, 
                resour, 
                secmor, 
                subfin, 
                aas_nswmetro, 
                aas_nswregional, 
                aas_act, 
                aas_vicmetro, 
                aas_vicregional, 
                aas_qldmetro, 
                aas_qldregional, 
                aas_wametro, 
                aas_waregional, 
                aas_sametro, 
                aas_saregional, 
                aas_tasmetro, 
                aas_tasregional, 
                aas_ntmetro, 
                aas_ntregional
             from lenders`,
            [],
            (error, results, fields) => {
                if(error){
                    return callBack(error)
                }
                    return callBack(null, results)
            }
            )
    },
    getLenderById: (id, callBack) => {
        pool.query(
            `select 
                lendercompany, 
                firstname, 
                lastname, 
                jobtitle, 
                businessphone, 
                mobilephone, 
                email, 
                streetaddress, 
                city, 
                postcode, 
                state, 
                country, 
                minloanlend, 
                maxloanlend, 
                additionalnotes, 
                entven, 
                hotels, 
                pubs, 
                resstk, 
                retvil, 
                stuacc, 
                vlnda, 
                vlwda, 
                asspur, 
                assref, 
                devfin, 
                eqtfin, 
                mezfin, 
                resour, 
                secmor, 
                subfin, 
                aas_nswmetro, 
                aas_nswregional, 
                aas_act, 
                aas_vicmetro, 
                aas_vicregional, 
                aas_qldmetro, 
                aas_qldregional, 
                aas_wametro, 
                aas_waregional, 
                aas_sametro, 
                aas_saregional, 
                aas_tasmetro, 
                aas_tasregional, 
                aas_ntmetro, 
                aas_ntregional 
            from lenders where liid = ?`,
            [id],
            (error, results, fields) => {
                if(error){
                    return callBack(error);
                }
                    return callBack(null, results[0]);
            }
        )
    },
    updateLender: (data, callBack) => {
        pool.query(
            `update lenders set 
                lendercompany=?,
                firstname=?,
                lastname=?,
                jobtitle=?,
                businessphone=?,
                mobilephone=?,
                email=?,
                streetaddress=?,
                city=?,
                postcode=?,
                state=?,
                country=?,
                minloanlend=?,
                maxloanlend=?,
                additionalnotes=?,
                entven=?,
                hotels=?,
                pubs=?,
                resstk=?,
                retvil=?,
                stuacc=?,
                vlnda=?,
                vlwda=?,
                asspur=?,
                assref=?,
                devfin=?,
                eqtfin=?,
                mezfin=?,
                resour=?,
                secmor=?,
                subfin=?,
                aas_nswmetro=?,
                aas_nswregional=?,
                aas_act=?,
                aas_vicmetro=?,
                aas_vicregional=?,
                aas_qldmetro=?,
                aas_qldregional=?,
                aas_wametro=?,
                aas_waregional=?,
                aas_sametro=?,
                aas_saregional=?,
                aas_tasmetro=?,
                aas_tasregional=?,
                aas_ntmetro=?,
                aas_ntregional=?, 
            where liid=?`,
            [
                data.lendercompany, 
                data.firstname, 
                data.lastname, 
                data.jobtitle, 
                data.businessphone, 
                data.mobilephone, 
                data.email, 
                data.streetaddress, 
                data.city, 
                data.postcode, 
                data.state, 
                data.country, 
                data.minloanlend, 
                data.maxloanlend, 
                data.additionalnotes, 
                data.entven, 
                data.hotels, 
                data.pubs, 
                data.resstk, 
                data.retvil, 
                data.stuacc, 
                data.vlnda, 
                data.vlwda, 
                data.asspur, 
                data.assref, 
                data.devfin, 
                data.eqtfin, 
                data.mezfin, 
                data.resour, 
                data.secmor, 
                data.subfin, 
                data.aas_nswmetro, 
                data.aas_nswregional, 
                data.aas_act, 
                data.aas_vicmetro, 
                data.aas_vicregional, 
                data.aas_qldmetro, 
                data.aas_qldregional, 
                data.aas_wametro, 
                data.aas_waregional, 
                data.aas_sametro, 
                data.aas_saregional, 
                data.aas_tasmetro, 
                data.aas_tasregional, 
                data.aas_ntmetro, 
                data.aas_ntregional
            ],
            (error, results, fields) => {
                if(error){
                    return callBack(error); 
                }
                    return callBack(null, results[0]);
            }
        )
    },
    deleteLender: (data, callBack) => {
        pool.query(
            `delete from lenders where liid = ?`,
            [data.userID],
            (error, results, fields) => {
                if(error){
                    return callBack(error);
                }
                    return callBack(null, results[0]);
            }
        )
    }
}